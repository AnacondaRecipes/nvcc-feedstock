{% set name = "nvcc" %}

package:
  name: "{{ name }}"

build:
  number: 1
  skip: true  # [not linux]

outputs:
  - name: "{{ name }}_{{ target_platform }}"
    version: "{{ CUDA_VER }}"
    script: install_nvcc.sh
    build:
      ignore_run_exports:
        - libgcc-ng
      run_exports:
        strong:
          - cudatoolkit {{ CUDA_VER }}|{{ CUDA_VER }}.*
    requirements:
      host:
        # Needed to symlink libcuda into sysroot libs.
        - {{ compiler("c") }}
      run:
    test:
      requires:
        - {{ compiler("c") }}
        # Host code is forwarded to a C++ compiler
        - {{ compiler("cxx") }}
      files:
        - test.cu
      commands:
        # Get intial state of $CUDA_HOME
        - export TEST_CUDA_HOME_INITIAL=$CUDA_HOME
        # Verify the symlink to the libcuda stub library exists.
        - test -f "$(${CC} --print-sysroot)/lib/libcuda.so"
        # Verify the activation scripts are in-place.
        {% for state in ["activate", "deactivate"] %}
        - test -f "${PREFIX}/etc/conda/{{ state }}.d/{{ PKG_NAME }}_{{ state }}.sh"
        {% endfor %}
        # Try using the activation scripts.
        - |
          if [ -z ${CUDA_HOME+x} ]; then
            echo "CUDA_HOME is unset after activation" && exit 1
          else
            echo "CUDA_HOME is set to '$CUDA_HOME'"
          fi
        - source ${PREFIX}/etc/conda/deactivate.d/{{ PKG_NAME }}_deactivate.sh
        - |
          if [ ! -z "${CUDA_HOME+x}" ] && [ ! -z "${TEST_CUDA_HOME_INITIAL+x}" ]; then
            echo "CUDA_HOME correctly unset after deactivation"
          elif [ ! -z "${CUDA_HOME+x}" ] && [ -z "${TEST_CUDA_HOME_INITIAL+x}" ]; then
            echo "CUDA_HOME correctly maintained as '$CUDA_HOME' after deactivation"
          else
            echo "CUDA_HOME is incorrectly set to '$CUDA_HOME' after deactivation" && exit 1
          fi
        - source ${PREFIX}/etc/conda/activate.d/{{ PKG_NAME }}_activate.sh
        - |
          if [ -z ${CUDA_HOME+x} ]; then
            echo "CUDA_HOME is unset after activation" && exit 1
          else
            echo "CUDA_HOME is set to '$CUDA_HOME'"
          fi
        # Try building something.
        - nvcc test.cu
        # Cleanup after ourselves
        - unset TEST_CUDA_HOME_INITIAL
    about:
      home: https://github.com/conda-forge/nvcc-feedstock
      license: BSD 3-Clause
      license_file: LICENSE.txt
      summary: A meta-package to enable the right nvcc.

about:
  home: https://github.com/conda-forge/nvcc-feedstock
  license: BSD 3-Clause
  license_file: LICENSE.txt
  summary: A meta-package to enable the right nvcc.

extra:
  recipe-maintainers:
    - dillon-cullinan
    - isuruf
    - jakirkham
    - kkraus14
    - mike-wendt
    - raydouglass
